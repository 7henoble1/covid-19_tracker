{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dbe66c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1vWuN\",\"card\":\"Cards_card__JhWXe\",\"infected\":\"Cards_infected__2RYUf\",\"recovered\":\"Cards_recovered__1H0bl\",\"deaths\":\"Cards_deaths__2Utma\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\n\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography varaint=\"body2\">Number of active cases of COVID-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                       <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography varaint=\"body2\">Number of recoveries from COVID-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography varaint=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography varaint=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    </Grid>\r\n</div> \r\n  )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n\r\n    try {\r\n      const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);      \r\n      \r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      console.log(error);  \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async ()=> {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData)=> ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));    \r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);    \r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);    \r\n  } catch (error) {\r\n      console.log(error);\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n     const fetchAPI = async () => {\r\n       setDailyData(await fetchDailyData());\r\n     }    \r\n\r\n     fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length \r\n    ? ( \r\n      <Line  \r\n      data={{ \r\n        labels: dailyData.map(({ date }) => date), \r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true\r\n        }, {\r\n        data: dailyData.map(({ deaths }) => deaths),\r\n        label: 'Deaths',\r\n        borderColor: 'red',\r\n        backgroundColor: 'rgba(255, 0 , 0, 0.5)',\r\n        fill: true,\r\n      }], \r\n    }} \r\n    />) : null\r\n  );\r\n\r\n  console.log(confirmed, recovered, deaths)\r\n\r\n  const barChart = ( \r\n    confirmed \r\n      ? ( \r\n        <Bar \r\n          data = {{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(225, 0, 0, 0.5)',\r\n              ],\r\n              data:[confirmed.value, recovered.value, deaths.value]\r\n            }]\r\n          }}\r\n          options = {{ \r\n            legend: {display: false },\r\n            title: { display: true, text: `Current state in ${country}`},\r\n          }}\r\n        /> \r\n     ) : null \r\n  );\r\n\r\n  \r\n  return(\r\n     <div className={styles.container}>\r\n       {country ? barChart : lineChart}\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from  '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n       setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  },[setFetchedCountries]);\r\n\r\n  console.log(fetchCountries)\r\n  \r\n  return(\r\n    <FormControl className={styles.formControl}> \r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3z3Vy\",\"image\":\"App_image__3t3Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1qq4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1WOA-\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}